<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html
        PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:ui="http://java.sun.com/jsf/facelets" xmlns:components="http://xmlns.jcp.org/jsf/composite/components"
      xmlns:f="http://java.sun.com/jsf/core">

<ui:composition template="../templates/template.xhtml">
    <ui:define name="content">

        <components:jasmineTest testRunner="test26-simplepush.js"/>

        <script type="text/javascript">
            let faces4Init = jsf.push.init;
            /*
             * we shim back the breaking api change from 3.0 to 4.0
             * onerror is gone
             */
            let _socketClientId = null;
            jsf.push.init = (socketClientId,
                               url,
                               channel,
                               onopen,
                               onmessage,
                               // no on error api change for 4.0
                               onerror,
                               onclose,
                               behaviors,
                               autoConnect) => {
                _socketClientId = socketClientId;
                faces4Init(socketClientId, "ws://localhost:8080/IntegrationJSTest/simulatedendpoint", channel, onopen, onmessage, onerror, onclose, behaviors, autoConnect);
                //let ws = new WebSocket("ws://localhost:8080/IntegrationJSTest/simulatedendpoint");
                //ws.onmessage = (message) => console.log(message);
                //console.log("init called");
                //faces4Init(socketClientId, url, channel, onopen, onmessage, onerror, onclose, behaviors, autoConnect);
            }
            function onMessage(message, channel, event) {
                console.log([channel, message, JSON.stringify(event)].join(", "));
                console.log(message);
                //  Thats pretty much all we can test atm without a backend jsf implementation
                DQ$("#pushtarget #channel").innerHTML = channel;
                DQ$("#pushtarget #messsage").innerHTML = message;
                faces.push.close(_socketClientId);
                DQ$("#pushtarget #closed").innerHTML = "true";
            }
        </script>
        <h:form id="form1">
            <h:commandButton id="sendMessage" value="Send Message" action="#{websocketEndpoint.doSimplePush}">
                <f:ajax execute="@this" render="@form"></f:ajax>
            </h:commandButton>
        </h:form>
        <f:websocket channel="hello" onmessage="onMessage" />
        <div id="pushtarget"><div id="channel"></div><div id="messsage"></div><div id="closed"></div></div>


    </ui:define>

</ui:composition>
</html>